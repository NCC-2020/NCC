{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atharva\\\\Desktop\\\\Work\\\\Projects\\\\React\\\\NCC\\\\ncc\\\\src\\\\pages\\\\LeaderBoard\\\\components\\\\common\\\\Pagination.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport _ from \"lodash\";\nimport \"./Pagination.css\";\n\nfunction Pagination(props) {\n  const {\n    itemsCount,\n    pageSize,\n    currentPage,\n    onPageChange\n  } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize); //console.log(pagesCount);\n\n  if (pagesCount === 1) return null; //If there is only one page no need to render\n\n  const pages = _.range(1, pagesCount + 1);\n\n  return React.createElement(\"nav\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, pages.map(page => React.createElement(\"li\", {\n    key: page,\n    className: page === currentPage ? \"page-item active\" : \"page-item\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"page-link\",\n    onClick: () => onPageChange(page),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, page)))));\n}\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/atharva/Desktop/Work/Projects/React/NCC/ncc/src/pages/LeaderBoard/components/common/Pagination.jsx"],"names":["React","Component","PropTypes","_","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","map","page","cursor","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,kBAAP;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,MAAsDJ,KAA5D;AACA,QAAMK,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB,CAFyB,CAGzB;;AACA,MAAIG,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP,CAJG,CAIU;;AACnC,QAAMG,KAAK,GAAGV,CAAC,CAACW,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,SAAS,EAAEA,IAAI,KAAKR,WAAT,GAAuB,kBAAvB,GAA4C,WAFzD;AAGE,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAE,MAAMR,YAAY,CAACO,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CALF,CADD,CADH,CADF,CADF;AAiBD;;AAEDZ,UAAU,CAACc,SAAX,GAAuB;AACrBZ,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UADR;AAErBb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,MAAV,CAAiBC,UAFN;AAGrBZ,EAAAA,WAAW,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UAHT;AAIrBX,EAAAA,YAAY,EAAEP,SAAS,CAACmB,IAAV,CAAeD;AAJR,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport _ from \"lodash\";\r\nimport \"./Pagination.css\";\r\nfunction Pagination(props) {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //console.log(pagesCount);\r\n  if (pagesCount === 1) return null; //If there is only one page no need to render\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav className=\"page\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}